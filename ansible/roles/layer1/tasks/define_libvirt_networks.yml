# define networks
- name: start default network to ensure host IP can be determined
  virt_net: uri=qemu:///system name=default state=active
  ignore_errors: true
- name: reread system facts
  setup:
- name: delete networks who need to be reconfigured
  virt_net: uri=qemu:///system name=default command=destroy state=absent
  #when: ansible_{{ item.bridge }}.ipv4.address is defined and ansible_{{ item.bridge }}.ipv4.address != item.gw_ip
  when: ansible_{{ item.bridge }}.ipv4.address is defined and ansible_{{ item.bridge }}.ipv4.address != item.host_prefix | ipaddr('address')
  with_items: "{{ infrastructure_networks }}"
- name: start firewalld to ensure the define networks command will not fail
  service: name=firewalld state=started
- debug: msg={{ lookup("template", "libvirt_network.xml.j2") }}
  with_items: "{{ infrastructure_networks }}"

- name: define networks
  virt_net: uri=qemu:///system name={{ item.netname }} command=define state=present xml='{{ lookup("template", "libvirt_network.xml.j2") }}'
  with_items: "{{ infrastructure_networks }}"
- name: start networks
  virt_net: uri=qemu:///system name={{ item.netname }} state=active
  with_items: "{{ infrastructure_networks }}"
- name: set autostart networks
  virt_net: uri=qemu:///system name={{ item.netname }} autostart=yes
  with_items: "{{ infrastructure_networks }}"
