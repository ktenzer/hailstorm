# - name: subscribe RHEL
#   redhat_subscription: state=present username={{ rhsm_username }} password={{ rhsm_password }} autosubscribe=false
# - name: check subscriptions
#   shell: subscription-manager list --consumed | grep "Pool ID" || true
#   register: subscription_list
#   changed_when: False
# - name: attach to pool
#   command: 'subscription-manager attach --pool={{Â poolid }}'
#   when: subscription_list.stdout is not defined or poolid != subscription_list.stdout | regex_replace('Pool ID:\\s+(\\S*).*', '\\1')

- name: enable repos
  command: 'subscription-manager repos --disable="*" {% for repo in repos %} --enable="{{repo}}" {% endfor %}'
  when: repos is defined
- name: upgrade packages
  yum: name=* state=latest
  # OpenShift requires older  version of Docker, ensure that a failure doesn't stop the process
  failed_when: false
- name: install all prerequisites
  yum: name="{{ packages }}" state=latest
  notify:
    - reboot server
    - waiting for server to come back
  when: not (packages is undefined or packages is none or packages | trim == '')
# next tasks error message is probably the same as this: https://github.com/ansible/ansible/issues/14383
- name: enable services
  service: name={{ item }} enabled=yes state=started
  with_items: "{% if ensable_services is defined %}{{ enable_services }}{% endif %}"
  when: not (enable_services is undefined or enable_services is none or enable_services | trim == '')
- name: disable services
  service: name={{item}} enabled=no state=stopped
  with_items: "{% if disable_services is defined %}{{ disable_services }}{% endif %}"
  when: not (disable_services is undefined or disable_services is none or disable_services | trim == '')
- meta: flush_handlers
